window.SIDEBAR_ITEMS = {"constant":[["BOOLEAN","The Boolean Type"],["CONDITIONAL","A constant value that indicates a conditionality of conditional."],["FLOAT","The Floating Point Type"],["INTEGER","The Integer Type"],["STRING","The String Type"],["UNCONDITIONAL","A constant value that indicates a conditionality of unconditional."],["UUID","The UUID Type"]],"enum":[["Cardinality",""],["Conditionality",""],["Isa",""],["Relationship","A `Relationship` indicates that a set of objects are connected to each other in some manner . Typically it is a real world relationship. In the  case of this model it is strictly an abstraction."],["Type","The type of a value"]],"struct":[["AcknowledgedEvent","An Event that Does Something"],["Associative",""],["Attribute","An `Attribute` represents a single value. Each value must have a  [`Type`], which constrains the values of data that may be assigned to an `Attribute`."],["Binary","A `Binary` relationship, as it’s name implies, is a relationship between two objects. It consists of two parts, the `Dependent` end of the  relationship and the `Independent` end."],["Event","An event is sent to an object, and processed by the current state. Assuming it accepts the event. Otherwise it’s dropped on the floor."],["Many",""],["Object","An `Object` is a collection of related data. By creating `Object`s, and  connecting them with `Relationships` we build a powerful abstraction."],["One",""],["Referent","This is the side being referred to in a binary relationship. It is the “to” side."],["Referrer","This is the side of a binary relationship that is doing the pointing, thus it contains the referential attribute. It is connected to the “from” side of a binary relationship."],["State","An [Object] state, more precisely, a set of states, is where all the action happens."],["Subtype","The subtype in a supertype-subtype relationship."],["Supertype","This object represents the supertype in a supertype-subtype  relationship."]]};